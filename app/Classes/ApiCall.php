<?phpnamespace App\Classes;use Illuminate\Http\Request;use Illuminate\Http\Response;use Carbon\Carbon;use Auth;use DB;use App\User;use App\Model\DmtApi;use App\Model\KycDoc;use App\Model\Operators;use App\Model\Operators2;use App\Model\Operators3;use App\Model\Operators4;use App\Model\Transactions;use App\Model\Notifications;use App\Model\MoneyRequest;use App\Model\UsersMapping;use App\Model\ResponseTable;use App\Model\OpApiRelation;use App\Model\RechargeApi;use App\Model\RechargeAmountSlab;use App\Model\OpApiSwitch;class ApiCall{    public function rechargeApicall($api_id,$txn_id) {        $txn = Transactions::where('transaction_id',$txn_id)->first();        $op = OpApiRelation::where('op_code',$txn->op_code)->where('api_id',$api_id)->first();        $api = RechargeApi::where('id',$api_id)->where('status','1')->first();                $amount = $txn->amount;        $opcode_api = $op->api_op_code;        $mobile = $txn->mobile;                $url = $api->url.$api->amount_param."=$amount&".$api->op_param."=$opcode_api&".$api->mobile_param."=$mobile&".$api->txnid_param."=$txn_id";        if($api->method == 'POST'){            $apicall = $this->postApiQueryCall($url);        }else{            $apicall = $this->getApiCall($url);        }                             $reponse_data = new ResponseTable();            $reponse_data->response = "";            $reponse_data->api_name = $api->name;            $reponse_data->request = $url;            $reponse_data->transaction_id = $txn_id;            $reponse_data->res_type = "REQ";            $reponse_data->save();                        $reponse_data = new ResponseTable();            $reponse_data->response = $apicall;            $reponse_data->api_name = $api->name;            $reponse_data->request = "";            $reponse_data->transaction_id = $txn_id;            $reponse_data->res_type = "RES";            $reponse_data->save();                return $apicall;            }    public function postApiQueryCall($url) {        $curl = curl_init();                curl_setopt_array($curl, array(        CURLOPT_URL => $url,        CURLOPT_RETURNTRANSFER => true,        CURLOPT_ENCODING => "",        CURLOPT_MAXREDIRS => 10,        CURLOPT_TIMEOUT => 0,        CURLOPT_FOLLOWLOCATION => true,        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,        CURLOPT_CUSTOMREQUEST => "POST",        CURLOPT_HTTPHEADER => array(        "Content-Type: application/json"),        ));                $response = curl_exec($curl);        curl_close($curl);        return $response;    }        public function getApiCall($url) {        $curl = curl_init();                curl_setopt_array($curl, array(        CURLOPT_URL => $url,        CURLOPT_RETURNTRANSFER => true,        CURLOPT_ENCODING => "",        CURLOPT_MAXREDIRS => 10,        CURLOPT_TIMEOUT => 0,        CURLOPT_FOLLOWLOCATION => true,        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,        CURLOPT_CUSTOMREQUEST => "GET",        CURLOPT_HTTPHEADER => array(        "Content-Type: application/json"        ),        ));                $response = curl_exec($curl);                curl_close($curl);        return $response;    }        public function postApiJsonCall($url,$params) {        $data = json_encode($params);                $curl = curl_init();        curl_setopt_array($curl, array(          CURLOPT_URL => $url,          CURLOPT_RETURNTRANSFER => true,          CURLOPT_ENCODING => "",          CURLOPT_MAXREDIRS => 10,          CURLOPT_TIMEOUT => 0,          CURLOPT_FOLLOWLOCATION => true,          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,          CURLOPT_CUSTOMREQUEST => "POST",          CURLOPT_POSTFIELDS =>$data,          CURLOPT_HTTPHEADER => array(            "Content-Type: */*",          ),        ));        $response = curl_exec($curl);        curl_close($curl);        return $response;    }            }